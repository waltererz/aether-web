body {
    margin: 0px;
    font-family: $font-family-sans-serif;
    font-size: $font-size-base;
    line-height: $line-height-base;
    background-color: $body-bg;
    color: $body-color;
}

a {
    color: initial;
    text-decoration: none;
}

.mt-0 {
    margin-top: 0px !important;
}

.mt-5 {
    margin-top: 5px !important;
}

.mt-20 {
    margin-top: 20px !important;
}

.mb-0 {
    margin-bottom: 0px !important;
}

.mb-5 {
    margin-bottom: 5px !important;
}

.mb-20 {
    margin-bottom: 20px !important;
}

.left {
    text-align: left !important;
}

.center {
    text-align: center !important;
}

.right {
    text-align: right !important;
}

.red,
.error {
    color: $error-color !important;
}

.green,
.success {
    color: $success-color !important;
}

.app-drawer .drawer-paper {
    z-index: 900;
    box-sizing: border-box;
}

.app-drawer .drawer-paper {
    background-color: $body-bg;
    border: 0px;
}

.app-drawer.is-b .drawer-paper {
    background-color: #ffffff;
    border: 0px;
    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
}

.app-drawer .drawer-paper .app-drawer-list .MuiListItem-root {
    border-radius: 5px;
}

.app-container.aether .grid-container .grid-item-1 {
    box-sizing: border-box;
    width: 100%;
}

.app-container.aether .grid-container .grid-item-2 {
    box-sizing: border-box;
    width: 100%;
}

.app-container.aether .grid-container .grid-item-trickery {
    box-sizing: border-box;
    width: 100%;
}

.app-drawer .app-drawer-title {
    padding-top: 5px;
    font-size: 1.25rem;
    font-weight: bold;
}

.app-container.aether .grid-container .grid-item-1 h3 {
    border-bottom: 1px solid #eeeeee;
    padding: 5px 10px;
    font-size: 1.2em;
    font-weight: bold;
}

.app-container.aether .grid-container .grid-item-1 div.message {
    margin: 10px 0px;
    padding: 10px;
    border: 1px solid #eeeeee;
    border-radius: 5px;
    background-color: #ffffff;
    font-size: 0.85em;
}

ul.pagination {
    width: fit-content;
    margin: 0px auto;
    padding: 20px 0px;
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    align-items: center;
}

ul.pagination li.link {
    box-sizing: border-box;
    width: 32px;
    height: 32px;
    margin-left: 9px;
    padding-top: 4px;
    text-align: center;
    line-height: 1.5;
    border-radius: 16px;
    color: $body-color;
}

ul.pagination:not(a) > li.link:first-child,
ul.pagination > a:first-child > li.link {
    margin-left: 0px;
}

ul.pagination li.link.previous,
ul.pagination li.link.next {
    border: 0px;
    padding-top: 3px;
}

ul.pagination li.link.active {
    background-color: $primary;
    border: 1px solid $primary;
    opacity: 0.8;
    color: #ffffff;
    font-weight: bold;
}

ul.pagination li.link.disabled {
    opacity: 0.3;
}

@media screen and (min-width: $breakpoint-xs) {
    body {
        padding-top: $default-margin-top-bp-xs;
    }

    .app-drawer {
        display: none;
    }

    .app-container.aether {
        padding: 0px;
    }

    .app-container.aether .grid-container .grid-item-1 {
        width: 100%;
        max-width: 700px;
        margin: 0px auto;
    }

    .app-container.aether .grid-container .grid-item-1,
    .app-container.aether .grid-container .grid-item-2,
    .app-container.aether .grid-container .grid-item-trickery {
        min-height: calc(100vh - #{$default-margin-top-bp-xs});
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-2,
    .app-container.aether.onlyRight .grid-container .grid-item-2,
    .app-container.aether .grid-container .grid-item-trickery {
        display: none;
    }
}

@media screen and (min-width: $breakpoint-sm - 120px) {
    .app-container.aether.onlyRight {
        padding: 0px 10px;
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-1 {
        margin: initial;
        padding-left: 10px;
        max-width: calc(
            #{$breakpoint-sm} - #{$right-grid-item-width} - 40px -
                ((#{$breakpoint-sm} - 50px) - 100vw)
        );
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-2 {
        display: block;
        padding-right: 10px;
        max-width: calc(
            #{$right-grid-item-width} - (#{$breakpoint-sm} - (#{$breakpoint-sm} - 50px))
        );
    }
}

@media screen and (min-width: $breakpoint-sm - 50px) {
    .app-container.aether:not(.onlyRight) .grid-container .grid-item-1 {
        max-width: calc(#{$breakpoint-sm} - #{$right-grid-item-width} - 40px);
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-2 {
        max-width: calc(#{$right-grid-item-width} - (#{$breakpoint-sm} - 100vw));
    }
}

@media screen and (min-width: $breakpoint-sm) {
    .app-container.aether:not(.onlyRight) .grid-container .grid-item-1 {
        max-width: calc(100vw - #{$right-grid-item-width} - 40px);
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-2 {
        max-width: $right-grid-item-width;
    }

    .app-container.aether.onlyRight .grid-container .grid-item-1 {
        margin: initial;
        max-width: calc(
            (#{$breakpoint-xl} - #{$right-grid-item-width} - 27px) -
                (#{$breakpoint-xl} - #{$breakpoint-md}) - ((#{$breakpoint-md} - 100vw) / 2)
        );
    }

    .app-container.aether.onlyRight .grid-container .grid-item-2 {
        display: block;
        max-width: calc(#{$right-grid-item-width} - ((#{$breakpoint-md} - 100vw) / 2));
    }
}

@media screen and (min-width: $breakpoint-md) {
    body {
        padding-top: $default-margin-top-bp-md;
    }

    .app-drawer {
        display: block;
    }

    .app-drawer .drawer-paper {
        height: calc(100vh - 48px);
        margin-top: 48px;
        padding: 5px 10px 10px 10px;
    }

    .app-drawer,
    .app-drawer .drawer-paper {
        width: calc(#{$drawer-width} - ((#{$breakpoint-xl} - #{$breakpoint-lg})) / 2);
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-1 {
        padding-left: 0px;
        max-width: calc(#{$center-grid-item-width} - (#{$breakpoint-lg} - 100vw));
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-2 {
        max-width: calc(#{$right-grid-item-width} - ((#{$breakpoint-xl} - #{$breakpoint-lg})) / 2);
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-trickery {
        display: block;
        max-width: calc(#{$drawer-width} - ((#{$breakpoint-xl} - #{$breakpoint-lg})) / 2);
    }

    .app-container.aether.onlyRight .grid-container .grid-item-1 {
        max-width: calc(
            (#{$breakpoint-xl} - #{$right-grid-item-width} - 27px) - (#{$breakpoint-xl} - 100vw)
        );
    }

    .app-container.aether.onlyRight .grid-container .grid-item-2 {
        max-width: $right-grid-item-width;
    }

    .app-container.aether .grid-container .grid-item-1,
    .app-container.aether .grid-container .grid-item-2,
    .app-container.aether .grid-container .grid-item-trickery {
        min-height: calc(100vh - #{$default-margin-top-bp-md});
    }
}

@media screen and (min-width: $breakpoint-lg) {
    .app-drawer,
    .app-drawer .drawer-paper {
        width: calc(#{$drawer-width} - ((#{$breakpoint-xl} - 100vw) / 2));
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-1 {
        max-width: $center-grid-item-width;
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-2 {
        max-width: calc(#{$right-grid-item-width} - ((#{$breakpoint-xl} - 100vw)) / 2);
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-trickery {
        max-width: calc(#{$drawer-width} - ((#{$breakpoint-xl} - 100vw)) / 2);
    }

    .app-container.aether.onlyRight .grid-container .grid-item-1 {
        max-width: calc(
            (#{$breakpoint-xl} - #{$right-grid-item-width} - 27px) - (#{$breakpoint-xl} - 100vw)
        );
    }
}

@media screen and (min-width: $breakpoint-xl) {
    .app-drawer,
    .app-drawer .drawer-paper {
        width: $drawer-width;
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-2 {
        max-width: $right-grid-item-width;
    }

    .app-container.aether:not(.onlyRight) .grid-container .grid-item-trickery {
        max-width: $drawer-width;
    }

    .app-container.aether.onlyRight .grid-container {
        max-width: calc(
            (#{$breakpoint-xl} - #{$right-grid-item-width}) + #{$right-grid-item-width} + 27px
        );
        margin: 0px auto;
    }

    .app-container.aether.onlyRight .grid-container .grid-item-1 {
        max-width: calc(#{$breakpoint-xl} - #{$right-grid-item-width} - 27px);
    }
}
